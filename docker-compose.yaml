version: "3.9"

services:
  nginx:
    container_name: ${PROJECT_NAME}_nginx
    build:
      context: ./.docker/nginx
    ports:
      - ${NGINX_HOST_PORT}:80
    volumes:
      - ./${SOURCE_DIR_NAME}/public:/var/www/public
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app

  app:
    container_name: ${PROJECT_NAME}_app
    build:
      context: ./.docker/php
    ports:
        - ${APP_HOST_PORT}:9000
        - ${APP_VITE_HOST_PORT}:5173
    volumes:
      - ./${SOURCE_DIR_NAME}:/var/www
      - ./.docker/php/php.ini:/usr/local/etc/php/php.ini
      - /${SOURCE_DIR_NAME}/node_modules
      - /${SOURCE_DIR_NAME}/vendor
    tty: true
    depends_on:
      - db
      - redis
      - minio
      - mailhog

  db:
    container_name: ${PROJECT_NAME}_db
    build: 
      context: .docker/db
    ports:
      - target: ${DB_HOST_PORT}
        published: ${DB_HOST_PORT:-3306}
        protocol: tcp
        mode: host
    volumes:
      - ./.docker/db/data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
      MYSQL_USER: ${MYSQL_USER_NAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: password
      TZ: Asia/Tokyo

  redis:
    container_name: ${PROJECT_NAME}_redis
    image: redis:6.0.5
    ports:
      - ${REDIS_HOST_PORT}:6379

  minio:
    container_name: ${PROJECT_NAME}_minio
    image: minio/minio
    ports:
      - ${MINIO_HOST_PORT1}:9999
      - ${MINIO_HOST_PORT2}:9001
    environment:
      MINIO_ACCESS_KEY: access_key
      MINIO_SECRET_KEY: secret_key
      MINIO_DEFAULT_BUCKETS: uploads
    command: server /export --address :9999 --console-address :9001

  create-bucket:
    image: minio/mc
    entrypoint: [ "" ]
    command:
      - /bin/sh
      - -c
      - |
        server /data --console-address :9001
        until (mc config host add minio http://minio:9999 access_key secret_key) do echo 'wait until add host' && sleep 1; done;
        mc mb minio/uploads
        mc anonymous set public minio/uploads
    depends_on:
      - minio

  mailhog:
    container_name: ${PROJECT_NAME}_mailhog
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  # DB作成後、ER図作成したい時以外は一旦コメントアウトしておく
  # schemaspy:
  #   container_name: ${PROJECT_NAME}_schemaspy
  #   build: 
  #     context: .docker/schemaspy
  #   volumes:
  #     - .docker/schemaspy/output:/output
  #   depends_on:
  #     - db
  #   environment:
  #     SCHEMASPY_OUTPUT: /output